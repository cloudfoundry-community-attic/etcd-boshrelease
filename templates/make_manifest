#!/bin/bash

set -e

infrastructure=$1
template_prefix="etcd"

if [ "$infrastructure" != "openstack-nova" ] && \
    [ "$infrastructure" != "aws-ec2" ] && \
    [ "$infrastructure" != "warden" ] ; then
  echo "usage: ./make_manifest <openstack-nova|aws-ec2|warden>"
  exit 1
fi

shift

BOSH_STATUS=$(bosh status)
DIRECTOR_UUID=$(echo "$BOSH_STATUS" | grep UUID | awk '{print $2}')
DIRECTOR_CPI=$(echo "$BOSH_STATUS" | grep CPI | awk '{print $2}')
DIRECTOR_NAME=$(echo "$BOSH_STATUS" | grep Name | awk '{print $2}')
NAME=$template_prefix-$infrastructure

if [[ $DIRECTOR_NAME = "warden" ]]; then
  if [[ $infrastructure != "warden" ]]; then
    echo "Not targeting bosh-lite with warden CPI. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

if [[ $infrastructure = "aws-ec2" ]]; then
  if [[ $DIRECTOR_CPI != "aws" ]]; then
    echo "Not targeting an AWS BOSH. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

if [[ $infrastructure = "openstack-nova" ]]; then
  if [[ $DIRECTOR_CPI != "openstack" ]]; then
    echo "Not targeting an OpenStack BOSH. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

templates=$(dirname $0)
release=$templates/..
tmpdir=$release/tmp

DISCOVERY_TOKEN=$(curl -s https://discovery.etcd.io/new | sed -e "s/^.*\///")

mkdir -p $tmpdir
cp $templates/stub.yml $tmpdir/stub-with-uuid.yml
echo "BOSH:     " $DIRECTOR_NAME $DIRECTOR_CPI $DIRECTOR_UUID
echo "Discovery:" https://discovery.etcd.io/$DISCOVERY_TOKEN
perl -pi -e "s/PLACEHOLDER-DIRECTOR-UUID/$DIRECTOR_UUID/g" $tmpdir/stub-with-uuid.yml
perl -pi -e "s/NAME/$NAME/g" $tmpdir/stub-with-uuid.yml
perl -pi -e "s/DISCOVERY_TOKEN/$DISCOVERY_TOKEN/g" $tmpdir/stub-with-uuid.yml

spiff merge \
  $templates/deployment.yml \
  $templates/jobs.yml \
  $templates/infrastructure-${infrastructure}.yml \
  $tmpdir/stub-with-uuid.yml \
  $* > $tmpdir/$NAME-manifest.yml

bosh deployment $tmpdir/$NAME-manifest.yml
